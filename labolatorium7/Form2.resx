<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>